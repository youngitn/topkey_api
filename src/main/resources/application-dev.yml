#----------------- 設定檔須知 -----------------
# Spring Boot 配置檔案優先順序和用法指南
# 此文件旨在說明 Spring Boot 應用程式中設定檔案的優先順序及用法
#------------------------------------------------

# 必須存在的設定檔案
# bootstrap.yml: 必須存在，因為它是在應用程式的生命週期早期載入的設定文件，主要用於設定與外部設定中心
# （如 Spring Cloud Config Server 或 Consul）相關的配置。
# 
# 可選的設定檔案
# application.yml: 可以不存在，如果你沒有在專案中提供它，應用程式仍然可以正常啟動，只要所有必要的設定都已經在其他地方（如 bootstrap.yml 或外部設定中心）設定好了。

# 載入順序和優先級
# Spring Boot 載入設定檔的順序和優先順序如下：
# 1. bootstrap.yml: 用於設定應用程式早期載入的配置，優先順序最高。通常用於配置與外部配置中心相關的設定。
# 2. bootstrap-<profile>.yml: 根據啟動的 profile 載入（例如 bootstrap-dev.yml），用於覆寫 bootstrap.yml 中的配置。
# 3. application.yml: 應用程式的主要設定檔。
# 4. application-<profile>.yml: 根據啟動的 profile 載入（例如 application-dev.yml），用於覆寫 application.yml 中的設定。

# 重要注意事項
# 1. 當存在 bootstrap 系列設定檔時，所有與 Consul 相關的設定都應該放在 bootstrap 系列設定檔中，而不是 application 系列設定檔中。
# 2. 這是因為這些配置需要在應用程式啟動的早期階段就被讀取，以便正確地與 Consul 進行服務註冊和發現。
# 3. 例如，以下配置應該放在 bootstrap 系列設定檔中：
# 
# spring:
#   cloud:
#     consul:
#       host: 10.4.3.249
#       port: 8500
#       config:
#         watch:
#           enabled: true
#         format: YAML
#         fail-fast: true
#         prefixes: config
#       discovery:
#         serviceName: api-service
#         tags: dev
#         healthCheckPath: /actuator/health
#         healthCheckInterval: 10s
#         healthCheckCriticalTimeout: 30s
# 
# 這樣做可以保證應用程式能夠在啟動時正確地與 Consul 進行交互。


#custom:
# logstash_uri: 10.4.3.249:4660
# appender_ref: TCP_LOGSTASH